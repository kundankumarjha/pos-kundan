{"version":3,"sources":["assets/image/profile.png","components/CustomModal/index.js","services/Constants.js","services/request/AxiosDefault.js","services/request/Customer.js","services/request/ErrorReq.js","pages/customer/index.js","services/request/Item.js","pages/item/index.js","services/request/Sales.js","pages/list/index.js","pages/pos/index.js","App.js","reportWebVitals.js","index.js"],"names":["CustomModal","title","children","history","useHistory","escFunction","useCallback","event","keyCode","goBack","useEffect","document","addEventListener","removeEventListener","className","onClick","e","stopPropagation","Button","close","style","color","fontSize","marginRight","defaultProps","path_server","request_delay","api_token","localStorage","getItem","noAuthAPI","axios","create","baseURL","timeout","headers","token","CustomerAPI","customerAdd","obj","console","log","post","customerEdit","customerDelete","delete","customerGet","get","params","customerList","customerSearch","ToastError","err","message","toString","error","response","status","msg","data","toast","customer_validation_default","customer_name_invalid","customer_default","customer_id","customer_name","customer_address","customer_phone","Customer","props","saveCustomer","state","customer","setState","customer_validation","customerRef","focus","is_new","saveNewcustomer","editcustomer","setCustomerToCart","index","callbackRequest","list_customer","deleteCustomer","id","then","result","success","refreshCustomer","catch","getCustomer","toggleModal","modalDialog","selected_customer","in_proses","this","Table","responsive","hover","borderless","map","ButtonGroup","size","icon","faPlus","faEdit","faTrash","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","row","Label","sm","Col","Input","invalid","autoFocus","innerRef","ref","type","name","value","placeholder","onChange","target","FormFeedback","tooltip","customer_address_invalid","customer_phone_invalid","ModalFooter","React","Component","ItemAPI","itemAdd","itemEdit","itemDelete","itemGet","itemList","itemSearch","item_validation_default","item_name_invalid","item_package_invalid","item_default","item_id","item_name","item_price","item_stock","item_package","Item","saveItem","req","item","item_validation","itemRef","packageRef","saveNewItem","editItem","new","itemDetail","refreshItem","thousandSeparator","inputMode","onValueChange","values","inputmode","defaultValue","disabled","selected","SalesAPI","salesAdd","salesDelete","salesGet","salesList","List","deleteSales","sales_id","refreshSales","list","SalesList","sales_date","discount","displayType","parseFloat","total","CustomCalender","format_mysql_date","d","month","getMonth","day","getDate","year","getFullYear","length","join","POS","cancelTransaction","window","confirm","resetObject","newCustomer","push","listSales","newItem","new_item","list_item","deleteItem","detail","addCart","listCart","sales","list_cart","findIndex","x","item_qty","item_subtotal","handleDecQty","handleIncQty","deleteCart","splice","payTransaction","setCustomer","custname","sales_date_display","Date","sub_total","grand_total","search_item_keyword","refresh_animation","itemlist","searchword","disc","subs","forEach","Row","InputGroup","dateFormat","date","customInput","InputGroupAddon","addonType","InputGroupText","faUser","block","ListGroup","flush","ListGroupItem","faTimes","min","max","spin","faSync","filter","itm","toUpperCase","includes","faCartPlus","exact","path","render","new_customer","customerDetail","editCustomer","withRouter","App","Container","fluid","Nav","NavItem","alt","src","profile","height","NavLink","href","faBell","faSignOutAlt","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"gcAAe,MAA0B,oC,gMCIzC,SAASA,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxBC,EAAUC,cACRC,EAAcC,uBAClB,SAACC,GACuB,KAAlBA,EAAMC,SACRL,EAAQM,WAGZ,CAACN,IAWH,OARAO,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,UAAWP,GAAa,GAE3C,WACLM,SAASE,oBAAoB,UAAWR,GAAa,MAEtD,CAACA,IAGF,qBAAKS,UAAU,yBAAyBC,QAAS,kBAAMZ,EAAQM,UAA/D,SACE,sBACEK,UAAU,wBACVC,QAAS,SAACC,GAAD,OAAOA,EAAEC,mBAFpB,UAIE,sBAAKH,UAAU,+BAAf,UACE,oBAAIA,UAAU,cAAd,SAA6Bb,IAC7B,cAACiB,EAAA,EAAD,CACEC,OAAK,EACLJ,QAAS,kBAAMZ,EAAQM,UACvBW,MAAO,CACLC,MAAO,OACPC,SAAU,OACVC,YAAa,YAInB,qBAAKT,UAAU,gCAAf,SAAgDZ,SAMxDF,EAAYwB,aAAe,CACzBvB,MAAO,SAGMD,Q,yFCnDFyB,EAAc,8CACdC,EAAgB,ICCvBC,EAAYC,aAAaC,QAAQ,SACnCD,aAAaC,QAAQ,SACrB,GAUSC,GARMC,IAAMC,OAAO,CAC9BC,QAASR,EACTS,QAASR,EACTS,QAAS,CACPC,MAAOT,KAIcI,IAAMC,OAAO,CACpCC,QAASR,EACTS,QAASR,KCeIW,EATK,CAClBC,YArBkB,SAACC,GAEnB,OADAC,QAAQC,IAAIF,GACLT,EAAUY,KAAK,YAAaH,IAoBnCI,aAlBmB,SAACJ,GACpB,OAAOT,EAAUY,KAAK,iBAAkBH,IAkBxCK,eAhBqB,SAACL,GACtB,OAAOT,EAAUe,OAAO,YAAaN,IAgBrCO,YAdkB,SAACP,GACnB,OAAOT,EAAUiB,IAAI,eAAgB,CAAEC,OAAQT,KAc/CU,aAZmB,WACnB,OAAOnB,EAAUiB,IAAI,cAYrBG,eAVqB,SAACX,GACtB,OAAOT,EAAUiB,IAAI,mBAAoB,CAAEC,OAAQT,M,QCWtCY,EA3BI,SAACC,GAClB,GACI,aAAcA,GACA,kBAAhBA,EAAIC,SACJD,EAAIC,UAAY,cAAgB3B,EAAc4B,WAAa,cAGtD,CACL,IAAIC,EAAQH,EAAII,SAChB,GACmB,QAAjBD,EAAME,QACW,QAAjBF,EAAME,QACW,QAAjBF,EAAME,QACW,QAAjBF,EAAME,OACN,CACA,IAAIC,EAAMH,EAAMI,KAAKN,QACrBO,IAAML,MAAM,SAAWA,EAAME,OAAS,MAAQC,GAE3B,QAAjBH,EAAME,QACRG,IAAML,MAAM,SAAWA,EAAME,OAAS,oBAEnB,QAAjBF,EAAME,QACRG,IAAML,MAAM,SAAWA,EAAME,OAAS,8BAhBxCG,IAAML,MAAMH,EAAIC,UCedQ,GAA8B,CAClCC,uBAAuB,GAEnBC,GAAmB,CACvBC,YAAa,EACbC,cAAe,GACfC,iBAAkB,GAClBC,eAAgB,IA2PHC,G,kDAvPb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,aAAe,WAEb,GAA0B,KADhB,EAAKC,MAAMC,SACbP,cAQN,OAPA,EAAKQ,SAAS,CACZC,oBAAoB,2BACf,EAAKH,MAAMG,qBADG,IAEjBZ,uBAAuB,WAG3B,EAAKa,YAAYC,QAGnB,EAAKL,MAAMM,OAAS,EAAKC,kBAAoB,EAAKC,gBAxBjC,EA0BnBC,kBAAoB,SAACC,GACnB,EAAKZ,MAAMa,gBACT,EAAKX,MAAMY,cAAcF,GAAOjB,YAChC,EAAKO,MAAMY,cAAcF,GAAOhB,gBA7BjB,EAgCnBmB,eAAiB,SAACC,GAChBhD,EAAYO,eAAe,CAAEoB,YAAaqB,IACvCC,MAAK,SAACC,GACL3B,IAAM4B,QAAQD,EAAO5B,KAAKN,SAC1B,EAAKoC,qBAENC,OAAM,SAACtC,GACND,EAAWC,OAvCE,EA0CnBuC,YAAc,SAACV,GACb,EAAKR,SAAS,CAAED,SAAU,EAAKD,MAAMY,cAAcF,GAAQJ,QAAQ,IACnE,EAAKe,eA5CY,EAuEnBA,YAAc,WACZ,EAAKnB,SAAS,CAAEoB,aAAc,EAAKtB,MAAMsB,eAtEzC,EAAKtB,MAAQ,CACXsB,aAAa,EACbC,kBAAmB,GACnBX,cAAe,GACfX,SAAUT,GACVW,oBAAqBb,GACrBgB,QAAQ,EACRkB,WAAW,GATI,E,8DA8CA,IAAD,OAChB1D,EAAYC,YAAY0D,KAAKzB,MAAMC,UAChCc,MAAK,SAACC,GACL3B,IAAM4B,QAAQD,EAAO5B,KAAKN,SAC1B,EAAKoB,SAAS,CAAED,SAAUT,KAC1B,EAAKY,YAAYC,QACjB,EAAKa,qBAENC,OAAM,SAACtC,GACND,EAAWC,Q,qCAGD,IAAD,OACbf,EAAYM,aAAaqD,KAAKzB,MAAMC,UACjCc,MAAK,SAACC,GACL3B,IAAM4B,QAAQD,EAAO5B,KAAKN,SAC1B,EAAKoC,qBAENC,OAAM,SAACtC,GACND,EAAWC,Q,0CAIf4C,KAAKP,oB,wCAKY,IAAD,OAChBpD,EAAYY,eACTqC,MAAK,SAACC,GACL,EAAKd,SAAS,CACZU,cAAeI,EAAO5B,UAGzB+B,OAAM,SAACtC,GACND,EAAWC,Q,+BAGP,IAAD,OACDH,EAAe+C,KAAKzB,MAAMY,cAChC,OACE,eAAC,EAAD,CAAalF,MAAM,WAAnB,UACE,cAACiB,EAAA,EAAD,CAAQG,MAAM,UAAUN,QAASiF,KAAKJ,YAAa9E,UAAU,OAA7D,4BAGA,eAACmF,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAACC,YAAU,EAAlC,UACE,uBAAOtF,UAAU,eAAjB,SACE,+BACE,mCACA,sCACA,yCACA,uCACA,4BAGJ,gCACGmC,EAAaoD,KAAI,SAAC9D,EAAK0C,GACtB,OACE,+BACE,6BAAKA,EAAQ,IACb,6BAAK1C,EAAI0B,gBACT,6BAAK1B,EAAI2B,mBACT,6BAAK3B,EAAI4B,iBACT,oBAAIrD,UAAU,cAAd,SACE,eAACwF,EAAA,EAAD,CAAaC,KAAK,KAAlB,UACE,eAACrF,EAAA,EAAD,CACEjB,MAAM,cACNoB,MAAM,UACNN,QAAS,WACP,EAAKiE,kBAAkBC,IAJ3B,UAOE,cAAC,IAAD,CAAiBuB,KAAMC,MAPzB,kBASA,eAACvF,EAAA,EAAD,CACEjB,MAAM,gBACNoB,MAAM,UACNN,QAAS,WACP,EAAK4E,YAAYV,IAJrB,UAOE,cAAC,IAAD,CAAiBuB,KAAME,MAPzB,WASA,eAACxF,EAAA,EAAD,CACEjB,MAAM,kBACNc,QAAS,WACP,EAAKqE,eAAe7C,EAAIyB,cAE1B3C,MAAM,SALR,UAOE,cAAC,IAAD,CAAiBmF,KAAMG,MAPzB,oBAzBG1B,EAAM3B,oBAyCvB,eAACsD,EAAA,EAAD,CACEC,OAAQb,KAAKzB,MAAMsB,YACnBU,KAAK,KACLO,OAAQd,KAAKJ,YAHf,UAKE,cAACmB,EAAA,EAAD,CAAaD,OAAQd,KAAKJ,YAA1B,SACGI,KAAKzB,MAAMM,OAAS,eAAiB,kBAExC,cAACmC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,EAAX,2BACA,eAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,UACE,cAACE,EAAA,EAAD,CACEC,QACExB,KAAKzB,MAAMG,oBAAoBZ,sBAEjC2D,WAAS,EACTC,SAAU,SAACC,GACT,EAAKhD,YAAcgD,GAErBpB,KAAK,KACLqB,KAAK,OACLC,KAAK,gBACLC,MAAO9B,KAAKzB,MAAMC,SAASP,cAC3B8D,YAAY,gBACZC,SAAU,SAACzH,GAAW,IACZ0H,EAAW1H,EAAX0H,OACR,EAAKxD,SAAS,CACZD,SAAS,2BACJ,EAAKD,MAAMC,UADR,IAENP,cAAegE,EAAOH,aAK9B,cAACI,EAAA,EAAD,CAAcC,SAAO,EAArB,6CAGJ,eAACjB,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,EAAX,8BACA,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACE,EAAA,EAAD,CACEC,QACExB,KAAKzB,MAAMG,oBAAoB0D,yBAEjC7B,KAAK,KACLqB,KAAK,WACLE,MAAO9B,KAAKzB,MAAMC,SAASN,iBAC3B6D,YAAY,mBACZC,SAAU,SAACzH,GAAW,IACZ0H,EAAW1H,EAAX0H,OACR,EAAKxD,SAAS,CACZD,SAAS,2BACJ,EAAKD,MAAMC,UADR,IAENN,iBAAkB+D,EAAOH,kBAOrC,eAACZ,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,EAAX,4BACA,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACE,EAAA,EAAD,CACEC,QACExB,KAAKzB,MAAMG,oBAAoB2D,uBAEjC9B,KAAK,KACLqB,KAAK,OACLE,MAAO9B,KAAKzB,MAAMC,SAASL,eAC3B4D,YAAY,iBACZC,SAAU,SAACzH,GAAW,IACZ0H,EAAW1H,EAAX0H,OACR,EAAKxD,SAAS,CACZD,SAAS,2BACJ,EAAKD,MAAMC,UADR,IAENL,eAAgB8D,EAAOH,uBASvC,eAACQ,EAAA,EAAD,WACE,cAACpH,EAAA,EAAD,CAAQG,MAAM,YAAYN,QAASiF,KAAKJ,YAAxC,oBAEU,IACV,cAAC1E,EAAA,EAAD,CAAQG,MAAM,UAAUN,QAASiF,KAAK1B,aAAtC,SACG0B,KAAKzB,MAAMM,OAAS,WAAa,+B,GA/OzB0D,IAAMC,WCJdC,I,OATC,CACdC,QApBc,SAACnG,GACf,OAAOT,EAAUY,KAAK,QAASH,IAoB/BoG,SAlBe,SAACpG,GAChB,OAAOT,EAAUY,KAAK,aAAcH,IAkBpCqG,WAhBiB,SAACrG,GAClB,OAAOT,EAAUe,OAAO,eAAgBN,IAgBxCsG,QAdc,SAACtG,GACf,OAAOT,EAAUiB,IAAI,QAAS,CAAEC,OAAQT,KAcxCuG,SAZe,SAACvG,GAChB,OAAOT,EAAUiB,IAAI,QAAS,CAAEC,OAAQT,KAYxCwG,WAViB,SAACxG,GAClB,OAAOT,EAAUiB,IAAI,eAAgB,CAAEC,OAAQT,OCD3CyG,GAA0B,CAC9BC,mBAAmB,EACnBC,sBAAsB,GAGlBC,GAAe,CACnBC,QAAS,EACTC,UAAW,GACXC,WAAY,EACZC,WAAY,EACZC,aAAc,IAwLDC,G,kDApLb,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IAURqF,SAAW,WACT,IAAIC,EAAM,EAAKpF,MAAMqF,KACrB,MAAsB,KAAlBD,EAAIN,WACN,EAAK5E,SAAS,CACZoF,gBAAgB,2BACX,EAAKtF,MAAMsF,iBADD,IAEbZ,mBAAmB,WAGvB,EAAKa,QAAQlF,SAGU,KAArB+E,EAAIH,cACN,EAAK/E,SAAS,CACZoF,gBAAgB,2BACX,EAAKtF,MAAMsF,iBADD,IAEbX,sBAAsB,WAG1B,EAAKa,WAAWnF,cAGlB,EAAKL,MAAMM,OAAS,EAAKmF,cAAgB,EAAKC,aA/B9C,EAAK1F,MAAQ,CACXqF,KAAMvF,EAAM6F,IAAMf,GAAe9E,EAAM8F,WACvCN,gBAAiBb,GACjBnE,OAAQR,EAAM6F,IACdnE,WAAW,GANI,E,qJAmCJ,IAAD,OACZ0C,GAAQC,QAAQ1C,KAAKzB,MAAMqF,MACxBtE,MAAK,SAACC,GACL3B,IAAM4B,QAAQD,EAAO5B,KAAKN,SAC1B,EAAKoB,SAAS,CAAEmF,KAAMT,KACtB,EAAKW,QAAQlF,QACb,EAAKP,MAAM+F,iBAEZ1E,OAAM,SAACtC,GACND,EAAWC,Q,iCAGL,IAAD,OACTqF,GAAQE,SAAS3C,KAAKzB,MAAMqF,MACzBtE,MAAK,SAACC,GACL3B,IAAM4B,QAAQD,EAAO5B,KAAKN,SAC1B,EAAKyG,QAAQlF,QACb,EAAKP,MAAM+F,iBAEZ1E,OAAM,SAACtC,GACND,EAAWC,Q,+BAGP,IAAD,OACP,OACE,cAAC,EAAD,CAAanD,MAAO+F,KAAKzB,MAAMM,OAAS,WAAa,YAArD,SACE,eAACoC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,EAAX,uBACA,eAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,UACE,cAACE,EAAA,EAAD,CACEC,QAASxB,KAAKzB,MAAMsF,gBAAgBZ,kBACpCxB,WAAS,EACTC,SAAU,SAACC,GACT,EAAKmC,QAAUnC,GAEjBpB,KAAK,KACLqB,KAAK,OACLC,KAAK,YACLC,MAAO9B,KAAKzB,MAAMqF,KAAKP,UACvBtB,YAAY,YACZC,SAAU,SAACzH,GAAW,IACZ0H,EAAW1H,EAAX0H,OACR,EAAKxD,SAAS,CACZmF,KAAK,2BACA,EAAKrF,MAAMqF,MADZ,IAEFP,UAAWpB,EAAOH,aAK1B,cAACI,EAAA,EAAD,CAAcC,SAAO,EAArB,yCAGJ,eAACjB,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,EAAX,mBACA,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC,IAAD,CACEvG,UAAU,+BACViH,YAAY,IACZH,KAAK,OACLC,KAAK,aACLC,MAAO9B,KAAKzB,MAAMqF,KAAKN,WACvBe,mBAAmB,EACnBC,UAAU,UACVC,cAAe,SAACC,GAAY,IAClB1C,EAAU0C,EAAV1C,MACR,EAAKrD,SAAS,CACZmF,KAAK,2BACA,EAAKrF,MAAMqF,MADZ,IAEFN,WAAYxB,cAOxB,eAACZ,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,EAAX,mBACA,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC,IAAD,CACEvG,UAAU,+BACViH,YAAY,IACZH,KAAK,OACLC,KAAK,aACLC,MAAO9B,KAAKzB,MAAMqF,KAAKL,WACvBc,mBAAmB,EACnBI,UAAU,UACVF,cAAe,SAACC,GAAY,IAClB1C,EAAU0C,EAAV1C,MACR,EAAKrD,SAAS,CACZmF,KAAK,2BACA,EAAKrF,MAAMqF,MADZ,IAEFL,WAAYzB,cAOxB,eAACZ,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,EAAX,qBACA,eAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,UACE,eAACE,EAAA,EAAD,CACEC,QAASxB,KAAKzB,MAAMsF,gBAAgBX,qBACpCtB,KAAK,SACLF,SAAU,SAACC,GACT,EAAKoC,WAAapC,GAEpB+C,aAAc1E,KAAKzB,MAAMqF,KAAKJ,aAC9BxB,SAAU,SAACzH,GAAW,IACZ0H,EAAW1H,EAAX0H,OACR,EAAKxD,SAAS,CACZmF,KAAK,2BACA,EAAKrF,MAAMqF,MADZ,IAEFJ,aAAcvB,EAAOH,WAI3BD,KAAK,eACLtB,KAAK,KAjBP,UAmBE,wBAAQuB,MAAM,GAAG6C,UAAQ,EAACC,UAAQ,EAAlC,iCAGA,wBAAQ9C,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEF,cAACI,EAAA,EAAD,CAAcC,SAAO,EAArB,4CAGJ,eAACjB,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAI,IACX,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACnG,EAAA,EAAD,CAAQG,MAAM,UAAUN,QAASiF,KAAK0D,SAAUzJ,MAAM,YAAtD,SACG+F,KAAK3B,MAAM6F,IAAM,YAAc,4B,GA3K7B3B,IAAMC,WCRVqC,I,OAPE,CACfC,SAde,SAACvI,GAChB,OAAOT,EAAUY,KAAK,SAAUH,IAchCwI,YAZkB,SAACxI,GACnB,OAAOT,EAAUe,OAAO,SAAUN,IAYlCyI,SAVe,SAACzI,GAChB,OAAOT,EAAUiB,IAAI,YAAa,CAAEC,OAAQT,KAU5C0I,UARgB,SAAC1I,GACjB,OAAOT,EAAUiB,IAAI,SAAU,CAAEC,OAAQT,OC6F5B2I,G,kDA7Fb,WAAY7G,GAAQ,IAAD,8BACjB,cAAMA,IAMR8G,YAAc,SAAC9F,GACbwF,GAASE,YAAY,CAAEK,SAAU/F,IAC9BC,MAAK,SAACC,GACL3B,IAAM4B,QAAQD,EAAO5B,KAAKN,SAC1B,EAAKgI,kBAEN3F,OAAM,SAACtC,GACND,EAAWC,OAZf,EAAKmB,MAAQ,CACX+G,KAAM,IAHS,E,gEAmBjBtF,KAAKqF,iB,qCAGS,IAAD,OACbR,GAASI,YACN3F,MAAK,SAACC,GACL/C,QAAQC,IAAI8C,GACZ,EAAKd,SAAS,CACZ6G,KAAM/F,EAAO5B,UAGhB+B,OAAM,SAACtC,GACND,EAAWC,Q,+BAGP,IAAD,OACDmI,EAAYvF,KAAKzB,MAAM+G,KAC7B,OACE,cAAC,EAAD,CAAarL,MAAM,QAAnB,SACE,eAACgG,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAACC,YAAU,EAAlC,UACE,uBAAOtF,UAAU,eAAjB,SACE,+BACE,mCACA,4CACA,0CACA,0CACA,uCACA,4BAGJ,gCACGyK,EAAUlF,KAAI,SAAC9D,EAAK0C,GACnB,OACE,+BACE,6BAAKA,EAAQ,IACb,6BAAK1C,EAAIiJ,aACT,6BAAKjJ,EAAI0B,gBACT,6BACE,cAAC,IAAD,CACE6D,MAAOvF,EAAIkJ,SACXC,YAAa,OACbrB,mBAAmB,MAGvB,6BACE,cAAC,IAAD,CACEvC,MAAO6D,WAAWpJ,EAAIqJ,OACtBF,YAAa,OACbrB,mBAAmB,MAGvB,oBAAIvJ,UAAU,cAAd,SACE,cAACwF,EAAA,EAAD,CAAaC,KAAK,KAAlB,SACE,eAACrF,EAAA,EAAD,CACEjB,MAAM,eACNc,QAAS,WACP,EAAKoK,YAAY5I,EAAI6I,WAEvB/J,MAAM,SALR,UAOE,cAAC,IAAD,CAAiBmF,KAAMG,MAPzB,mBApBG1B,EAAM3B,0B,GArDZiF,IAAMC,WC6BnBqD,GAAiB,SAAC,GAAD,IAAG/D,EAAH,EAAGA,MAAO/G,EAAV,EAAUA,QAAV,OACrB,cAACG,EAAA,EAAD,CAAQG,MAAM,UAAUN,QAASA,EAAjC,SACG+G,KAICgE,GAAoB,SAACC,GACzB,IAAIC,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cAKb,OAHIL,EAAMM,OAAS,IAAGN,EAAQ,IAAMA,GAChCE,EAAII,OAAS,IAAGJ,EAAM,IAAMA,GAEzB,CAACE,EAAMJ,EAAOE,GAAKK,KAAK,MAG3BC,G,kDACJ,WAAYnI,GAAQ,IAAD,8BACjB,cAAMA,IAoBRoI,kBAAoB,WACVC,OAAOC,QAAQ,yBAClB,EAAKC,eAvBO,EAyCnBC,YAAc,WACZ,EAAKxI,MAAMlE,QAAQ2M,KAAK,cA1CP,EA6CnBC,UAAY,WACV,EAAK1I,MAAMlE,QAAQ2M,KAAK,UA9CP,EAiDnBE,QAAU,WACR,EAAKvI,SAAS,CAAEwI,UAAU,EAAMhD,SAAU,KAC1C,EAAK5F,MAAMlE,QAAQ2M,KAAK,UAnDP,EAsDnB7C,SAAW,SAAChF,GACV,EAAKR,SAAS,CAAEwI,UAAU,EAAOhD,SAAU,EAAK1F,MAAM2I,UAAUjI,KAChE,EAAKZ,MAAMlE,QAAQ2M,KAAK,UAxDP,EA2DnBK,WAAa,SAAClI,GACZ,IAAImI,EAAS,EAAK7I,MAAM2I,UAAUjI,GACxByH,OAAOC,QAAQ,iBAAmBS,EAAO/D,UAAY,OAE7DZ,GAAQG,WAAW,CAAEQ,QAASgE,EAAOhE,UAClC9D,MAAK,SAACC,GACL3B,IAAM4B,QAAQD,EAAO5B,KAAKN,SAC1B,EAAK+G,iBAEN1E,OAAM,SAACtC,GACND,EAAWC,OArEA,EA0EnBiK,QAAU,SAACpI,GACT,IAAIqI,EAAW,EAAK/I,MAAMgJ,MAAMC,UAC5BR,EAAU,EAAKzI,MAAM2I,UAAUjI,IACnCA,EAAQqI,EAASG,WAAU,SAACC,GAAD,OAAOA,EAAEtE,UAAY4D,EAAQ5D,YAC5C,EACVkE,EAASR,KAAK,CACZzD,UAAW2D,EAAQ3D,UACnBsE,SAAU,EACVrE,WAAYqC,WAAWqB,EAAQ1D,YAC/BF,QAAS4D,EAAQ5D,QACjBwE,cAAejC,WAAWqB,EAAQ1D,eAGpCgE,EAASrI,GAAO0I,UAAY,EAC5BL,EAASrI,GAAO2I,cACdjC,WAAWqB,EAAQ1D,YAAcqC,WAAW2B,EAASrI,GAAO0I,WAEhE,EAAKlJ,SAAS,CAAE8I,MAAM,2BAAM,EAAKhJ,MAAMgJ,OAAlB,IAAyBC,UAAWF,OA3FxC,EA6FnBO,aAAe,SAAC5I,GACd,IAAIqI,EAAW,EAAK/I,MAAMgJ,MAAMC,UACC,IAA7BF,EAASrI,GAAO0I,WAGpBL,EAASrI,GAAO0I,UAAY,EAC5BL,EAASrI,GAAO2I,cACdjC,WAAW2B,EAASrI,GAAOqE,YAC3BqC,WAAW2B,EAASrI,GAAO0I,UAC7B,EAAKlJ,SAAS,CAAE8I,MAAM,2BAAM,EAAKhJ,MAAMgJ,OAAlB,IAAyBC,UAAWF,QAtGxC,EAwGnBQ,aAAe,SAAC7I,GACd,IAAIqI,EAAW,EAAK/I,MAAMgJ,MAAMC,UAChCF,EAASrI,GAAO0I,UAAY,EAC5BL,EAASrI,GAAO2I,cACdjC,WAAW2B,EAASrI,GAAOqE,YAC3BqC,WAAW2B,EAASrI,GAAO0I,UAC7B,EAAKlJ,SAAS,CAAE8I,MAAM,2BAAM,EAAKhJ,MAAMgJ,OAAlB,IAAyBC,UAAWF,OA9GxC,EAgHnBS,WAAa,SAAC9I,GACZ,IAAIqI,EAAW,EAAK/I,MAAMgJ,MAAMC,UAChCF,EAASU,OAAO/I,EAAO,GACvB,EAAKR,SAAS,CAAE8I,MAAM,2BAAM,EAAKhJ,MAAMgJ,OAAlB,IAAyBC,UAAWF,OAnHxC,EAmInBW,eAAiB,SAAC1L,GAChB,IAAIgL,EAAQ,EAAKhJ,MAAMgJ,MACvB,GAA0B,IAAtBA,EAAMvJ,YAGR,OAFAJ,IAAML,MAAM,2CACZ,EAAKsJ,cAGHU,EAAMC,UAAUlB,QAAU,EAC5B1I,IAAML,MAAM,iCAGNmJ,OAAOC,QAAQ,+BAErB9B,GAASC,SAAS,EAAKvG,MAAMgJ,OAC1BjI,MAAK,SAACC,GACL,EAAKqH,cACLhJ,IAAM4B,QAAQD,EAAO5B,KAAKN,YAE3BqC,OAAM,SAACtC,GACND,EAAWC,OAtJA,EA0JnB8K,YAAc,SAAC7I,EAAI8I,GACjB,EAAK1J,SAAS,CACZ8I,MAAM,2BACD,EAAKhJ,MAAMgJ,OADX,IAEHvJ,YAAaqB,EACbpB,cAAekK,MAGnB,EAAK9J,MAAMlE,QAAQM,UAhKnB,EAAK8D,MAAQ,CACX0I,UAAU,EACVM,MAAO,CACLvJ,YAAa,EACbC,cAAe,GACfmK,mBAAoB,IAAIC,KACxB7C,WAAYM,GAAkB,IAAIuC,MAClC5C,SAAU,EACV+B,UAAW,GACXc,UAAW,EACXC,YAAa,GAEfrB,UAAW,GACXjD,SAAU,GACVuE,oBAAqB,GACrBC,mBAAmB,GAjBJ,E,0DA0BJ,IAAD,OACZzI,KAAKvB,SAAS,CAAEgK,mBAAmB,IACnChG,GAAQK,WACLxD,MAAK,SAACC,GACL,EAAKd,SAAS,CACZyI,UAAW3H,EAAO5B,KAClB8K,mBAAmB,OAGtB/I,OAAM,SAACtC,GACND,EAAWC,GACX,EAAKqB,SAAS,CAAEgK,mBAAmB,S,oCAiFvCzI,KAAKvB,SAAS,CACZ8I,MAAO,CACLvJ,YAAa,EACbC,cAAe,GACfmK,mBAAoB,IAAIC,KACxB7C,WAAYM,GAAkB,IAAIuC,MAClC5C,SAAU,EACV+B,UAAW,GACXc,UAAW,EACXC,YAAa,O,wFAwCjBvI,KAAKoE,gB,+BAGG,IAAD,OACDsE,EAAW1I,KAAKzB,MAAM2I,UACtByB,EAAa3I,KAAKzB,MAAMiK,oBACxBlB,EAAWtH,KAAKzB,MAAMgJ,MAAMC,UAC9BoB,EAAOjD,WAAW3F,KAAKzB,MAAMgJ,MAAM9B,UACnCoD,EAAO,EACX7I,KAAKzB,MAAMgJ,MAAMC,UAAUsB,SAAQ,SAACvM,GAClCsM,GAAQlD,WAAWpJ,EAAIqL,kBAEzB,IAAIW,EAAcM,EAAQA,EAAOD,EAAQ,IACrCN,EAAYO,EAEhB,OACE,qCACE,eAACE,EAAA,EAAD,CAAKjO,UAAU,WAAf,UACE,cAACwG,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAKxG,UAAU,gBAAgBuG,GAAI,GAAnC,UACE,sBAAKvG,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,eAACkO,EAAA,EAAD,WACE,cAAC,IAAD,CACEC,WAAW,aACXrE,SAAU5E,KAAKzB,MAAMgJ,MAAMa,mBAC3BpG,SAAU,SAACkH,GAAD,OACR,EAAKzK,SAAS,CACZ8I,MAAM,2BACD,EAAKhJ,MAAMgJ,OADX,IAEHa,mBAAoBc,EACpB1D,WAAYM,GAAkBoD,QAIpCC,YAAa,cAAC,GAAD,MAGf,cAACC,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAiB9I,KAAM+I,eAK/B,qBAAKzO,UAAU,qBAAf,SACE,cAACI,EAAA,EAAD,CAAQG,MAAM,OAAON,QAASiF,KAAK6G,YAAa2C,OAAK,EAArD,SACoC,IAAjCxJ,KAAKzB,MAAMgJ,MAAMvJ,YACd,iBACAgC,KAAKzB,MAAMgJ,MAAMtJ,qBAI3B,sBAAKnD,UAAU,iBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC2O,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACGpC,EAASjH,KAAI,SAAC9D,EAAK0C,GAClB,OACE,eAAC0K,EAAA,EAAD,WACE,qBAAK7O,UAAU,YAAf,SACE,8BAAMyB,EAAI8G,cAEZ,sBAAKvI,UAAU,cAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAACI,EAAA,EAAD,CACEH,QAAS,WACP,EAAK8M,aAAa5I,IAEpBsB,KAAK,KAJP,eAQC,KACAhE,EAAIoL,SACJ,KACD,cAACzM,EAAA,EAAD,CACEH,QAAS,WACP,EAAK+M,aAAa7I,IAEpBsB,KAAK,KAJP,eAOU,IAnBZ,IAoBI,IACF,cAAC,IAAD,CACEuB,MAAOvF,EAAI+G,WACXoC,YAAa,OACbrB,mBAAmB,OAIvB,qBAAKvJ,UAAU,SAAf,SACE,cAAC,IAAD,CACEgH,MAAOvF,EAAIqL,cACXlC,YAAa,OACbrB,mBAAmB,MAGvB,qBAAKvJ,UAAU,SAAf,SACE,cAAC,IAAD,CACEA,UAAU,2BACVb,MAAM,wBACNuG,KAAMoJ,IACN7O,QAAS,WACP,EAAKgN,WAAW9I,aA9CNA,EAAM3B,mBAwDlC,sBAAKxC,UAAU,uBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,mBACA,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CACEgH,MAAOwG,EACP5C,YAAa,OACbrB,mBAAmB,SAIzB,sBAAKvJ,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,sBACA,qBAAKA,UAAU,SAAf,SACE,eAACkO,EAAA,EAAD,CAAYzI,KAAK,KAAjB,UACE,cAACgB,EAAA,EAAD,CACEK,KAAK,SACLiI,IAAI,IACJC,IAAI,MACJvJ,KAAK,KACLyB,SAAU,SAACzH,GAAW,IACZ0H,EAAW1H,EAAX0H,OACR,EAAKxD,SAAS,CACZ8I,MAAM,2BACD,EAAKhJ,MAAMgJ,OADX,IAEH9B,SAAUxD,EAAOH,WAIvBA,MAAO9B,KAAKzB,MAAMgJ,MAAM9B,SACxB1D,YAAY,MAEd,cAACqH,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACE,cAACC,EAAA,EAAD,0BAKR,sBAAKxO,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,iBACA,qBAAKA,UAAU,mBAAf,SACE,cAAC,IAAD,CACEgH,MAAOyG,EACP7C,YAAa,OACbrB,mBAAmB,oBAQjC,cAAC/C,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAKxG,UAAU,iBAAiBuG,GAAI,GAApC,UACE,qBAAKvG,UAAU,OAAf,SACE,eAACkO,EAAA,EAAD,CAAYzI,KAAK,KAAjB,UACE,cAACgB,EAAA,EAAD,CACES,SAAU,SAACzH,GAAW,IACZ0H,EAAW1H,EAAX0H,OACR,EAAKxD,SAAS,CAAE+J,oBAAqBvG,EAAOH,SAE9CC,YAAY,2BAEd,cAACqH,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACE,eAAC/I,EAAA,EAAD,CAAarG,MAAM,oBAAoBsG,KAAK,KAA5C,UACE,cAACrF,EAAA,EAAD,CACEG,MAAM,UACNN,QAAS,WACP,EAAKqJ,eAHT,SAME,cAAC,IAAD,CACE2F,KAAM/J,KAAKzB,MAAMkK,kBACjBjI,KAAMwJ,QAGV,eAAC9O,EAAA,EAAD,CAAQG,MAAM,UAAUN,QAASiF,KAAKgH,QAAtC,UACG,IADH,8BAQR,8BACE,eAAC/G,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAACC,YAAU,EAAlC,UACE,uBAAOtF,UAAU,eAAjB,SACE,+BACE,mCACA,sCACA,oBAAIA,UAAU,aAAd,mBACA,oBAAIA,UAAU,aAAd,mBACA,4BAGJ,gCACG4N,EACEuB,QAAO,SAACC,GAAD,OACNA,EAAI7G,UACD8G,cACAC,SAASzB,EAAWwB,kBAExB9J,KAAI,SAAC9D,EAAK0C,GACT,OACE,+BACE,6BAAKA,EAAQ,IACb,6BAAK1C,EAAI8G,YACT,oBAAIvI,UAAU,aAAd,SAA4ByB,EAAIgH,aAChC,oBAAIzI,UAAU,aAAd,SAA4ByB,EAAI+G,aAChC,oBAAIxI,UAAU,cAAd,SACE,eAACwF,EAAA,EAAD,CAAaC,KAAK,KAAlB,UACE,eAACrF,EAAA,EAAD,CACEH,QAAS,WACP,EAAKsM,QAAQpI,IAEfhF,MAAM,cACNoB,MAAM,UALR,UAOE,cAAC,IAAD,CAAiBmF,KAAM6J,MAPzB,UASA,eAACnP,EAAA,EAAD,CACEjB,MAAM,mBACNoB,MAAM,UACNN,QAAS,WACP,EAAKkJ,SAAShF,IAJlB,UAOE,cAAC,IAAD,CAAiBuB,KAAME,MAPzB,WASA,eAACxF,EAAA,EAAD,CACEjB,MAAM,cACNc,QAAS,WACP,EAAKoM,WAAWlI,IAElB5D,MAAM,SALR,UAOE,cAAC,IAAD,CAAiBmF,KAAMG,MAPzB,oBAzBG1B,EAAM3B,sBA0C3B,gCACE,cAACpC,EAAA,EAAD,CACEH,QAASiF,KAAKiI,eACd5M,MAAM,UACNP,UAAU,OAHZ,qBAOA,cAACI,EAAA,EAAD,CACEH,QAASiF,KAAKyG,kBACdpL,MAAM,SACNP,UAAU,OAHZ,oBAOA,cAACI,EAAA,EAAD,CAAQH,QAASiF,KAAK+G,UAAW1L,MAAM,OAAvC,qCAQR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiP,OAAK,EAACC,KAAK,MAClB,cAAC,IAAD,CACEA,KAAK,YACLC,OAAQ,kBACN,cAAC,GAAD,CACEtG,IAAK,EAAK3F,MAAMkM,aAChBvL,gBAAiB,SAACG,EAAI8I,GACpB,EAAKD,YAAY7I,EAAI8I,IAEvBuC,eAAgB,EAAKnM,MAAMoM,kBAIjC,cAAC,IAAD,CAAOJ,KAAK,QAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CACEA,KAAK,QACLC,OAAQ,kBACN,cAAC,GAAD,CACEtG,IAAK,EAAK3F,MAAM0I,SAChB7C,YAAa,WACX,EAAKA,eAEPD,WAAY,EAAK5F,MAAM0F,wB,GA5drB1B,IAAMC,WAseToI,eAAWpE,I,gBCvdXqE,OA7Df,WACE,OACE,eAAC,KAAD,WACE,sBAAK/P,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAACgQ,EAAA,EAAD,CAAWC,OAAO,EAAlB,SACE,eAAChC,EAAA,EAAD,WACE,cAACzH,EAAA,EAAD,CAAKD,GAAG,IAAIvG,UAAU,+BAAtB,uBAGA,cAACwG,EAAA,EAAD,CAAKD,GAAG,KAAKvG,UAAU,iBAAvB,SACE,eAACkQ,EAAA,EAAD,CAAKlQ,UAAU,WAAf,UACE,cAACmQ,EAAA,EAAD,UACE,sBAAKnQ,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,4BACA,qBAAKA,UAAU,QAAf,SACE,qBACEoQ,IAAI,iBACJpQ,UAAU,iBACVqQ,IAAKC,EACLC,OAAO,gBAKf,cAACJ,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,CAASxQ,UAAU,kBAAkByQ,KAAK,IAA1C,SACE,cAAC,IAAD,CAAiB/K,KAAMgL,IAAQjL,KAAK,WAGxC,cAAC0K,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,CAASxQ,UAAU,kBAAkByQ,KAAK,IAA1C,SACE,cAAC,IAAD,CAAiB/K,KAAMiL,IAAclL,KAAK,uBAQxD,sBAAMzF,UAAU,WAAhB,SACE,cAACgQ,EAAA,EAAD,CAAWhQ,UAAU,iBAAiBiQ,OAAK,EAA3C,SACE,cAAC,GAAD,WAIN,cAAC,IAAD,CACEW,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,QCtDLC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/M,MAAK,YAAkD,IAA/CgN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC,GAAD,MAEFjS,SAASkS,eAAe,SAM1BV,O","file":"static/js/main.6ea1cb05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.22ce7054.png\";","import React, { useEffect, useCallback } from \"react\";\nimport \"./index.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nfunction CustomModal({ title, children }) {\n  let history = useHistory();\n  const escFunction = useCallback(\n    (event) => {\n      if (event.keyCode === 27) {\n        history.goBack();\n      }\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  }, [escFunction]);\n\n  return (\n    <div className=\"container-custom-modal\" onClick={() => history.goBack()}>\n      <div\n        className=\"container-inner-modal\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"container-inner-modal-header\">\n          <h2 className=\"page-header\">{title}</h2>\n          <Button\n            close\n            onClick={() => history.goBack()}\n            style={{\n              color: \"#000\",\n              fontSize: \"29px\",\n              marginRight: \"5px\",\n            }}\n          />\n        </div>\n        <div className=\"container-inner-modal-content\">{children}</div>\n      </div>\n    </div>\n  );\n}\n\nCustomModal.defaultProps = {\n  title: \"Title\",\n};\n\nexport default CustomModal;\n","export const path_server = \"https://62ed5acc818ab252b60f5157.mockapi.io\";\nexport const request_delay = 300000;\n","import axios from \"axios\";\nimport { path_server, request_delay } from \"../Constants\";\nconst api_token = localStorage.getItem(\"token\")\n  ? localStorage.getItem(\"token\")\n  : \"\";\n\nexport const api = axios.create({\n  baseURL: path_server,\n  timeout: request_delay,\n  headers: {\n    token: api_token,\n  },\n});\n\nexport const noAuthAPI = axios.create({\n  baseURL: path_server,\n  timeout: request_delay,\n});\n","import { noAuthAPI } from \"./AxiosDefault\";\n\nconst customerAdd = (obj) => {\n  console.log(obj)\n  return noAuthAPI.post(\"/customer\", obj);\n};\nconst customerEdit = (obj) => {\n  return noAuthAPI.post(\"/customer/edit\", obj);\n};\nconst customerDelete = (obj) => {\n  return noAuthAPI.delete(\"/customer\", obj);\n};\nconst customerGet = (obj) => {\n  return noAuthAPI.get(\"/customer/id\", { params: obj });\n};\nconst customerList = () => {\n  return noAuthAPI.get(\"/customer\");\n};\nconst customerSearch = (obj) => {\n  return noAuthAPI.get(\"/customer/search\", { params: obj });\n};\n\nconst CustomerAPI = {\n  customerAdd,\n  customerEdit,\n  customerDelete,\n  customerGet,\n  customerList,\n  customerSearch,\n};\n\nexport default CustomerAPI;\n","import { toast } from \"react-toastify\";\nimport { request_delay } from \"../Constants\";\n\nconst ToastError = (err) => {\n  if (\n    !(\"response\" in err) ||\n    err.message === \"Network Error\" ||\n    err.message === \"timeout of \" + request_delay.toString() + \"ms exceeded\"\n  ) {\n    toast.error(err.message);\n  } else {\n    let error = err.response;\n    if (\n      error.status === \"401\" ||\n      error.status === \"400\" ||\n      error.status === \"500\" ||\n      error.status === \"498\"\n    ) {\n      let msg = error.data.message;\n      toast.error(\"Error \" + error.status + \" - \" + msg);\n    }\n    if (error.status === \"404\") {\n      toast.error(\"Error \" + error.status + \" - API Not Found\");\n    }\n    if (error.status === \"405\") {\n      toast.error(\"Error \" + error.status + \" - Method Not Allowed\");\n    }\n  }\n};\n\nexport default ToastError;\n","import React from \"react\";\nimport \"./index.css\";\nimport CustomModal from \"../../components/CustomModal\";\nimport {\n  Table,\n  ButtonGroup,\n  Button,\n  Modal,\n  ModalHeader,\n  FormFeedback,\n  Label,\n  FormGroup,\n  Input,\n  Col,\n  Form,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nimport CustomerAPI from \"../../services/request/Customer\";\nimport ToastError from \"../../services/request/ErrorReq\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst customer_validation_default = {\n  customer_name_invalid: false,\n};\nconst customer_default = {\n  customer_id: 0,\n  customer_name: \"\",\n  customer_address: \"\",\n  customer_phone: \"\",\n};\n\nclass Customer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalDialog: false,\n      selected_customer: {},\n      list_customer: [],\n      customer: customer_default,\n      customer_validation: customer_validation_default,\n      is_new: true,\n      in_proses: false,\n    };\n  }\n  saveCustomer = () => {\n    let req = this.state.customer;\n    if (req.customer_name === \"\") {\n      this.setState({\n        customer_validation: {\n          ...this.state.customer_validation,\n          customer_name_invalid: true,\n        },\n      });\n      this.customerRef.focus();\n      return;\n    }\n    this.state.is_new ? this.saveNewcustomer() : this.editcustomer();\n  };\n  setCustomerToCart = (index) => {\n    this.props.callbackRequest(\n      this.state.list_customer[index].customer_id,\n      this.state.list_customer[index].customer_name\n    );\n  };\n  deleteCustomer = (id) => {\n    CustomerAPI.customerDelete({ customer_id: id })\n      .then((result) => {\n        toast.success(result.data.message);\n        this.refreshCustomer();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  };\n  getCustomer = (index) => {\n    this.setState({ customer: this.state.list_customer[index], is_new: false });\n    this.toggleModal();\n  };\n  saveNewcustomer() {\n    CustomerAPI.customerAdd(this.state.customer)\n      .then((result) => {\n        toast.success(result.data.message);\n        this.setState({ customer: customer_default });\n        this.customerRef.focus();\n        this.refreshCustomer();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  editcustomer() {\n    CustomerAPI.customerEdit(this.state.customer)\n      .then((result) => {\n        toast.success(result.data.message);\n        this.refreshCustomer();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  componentDidMount() {\n    this.refreshCustomer();\n  }\n  toggleModal = () => {\n    this.setState({ modalDialog: !this.state.modalDialog });\n  };\n  refreshCustomer() {\n    CustomerAPI.customerList()\n      .then((result) => {\n        this.setState({\n          list_customer: result.data,\n        });\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  render() {\n    const customerList = this.state.list_customer;\n    return (\n      <CustomModal title=\"Customer\">\n        <Button color=\"primary\" onClick={this.toggleModal} className=\"mb-2\">\n          + Add Customer\n        </Button>\n        <Table responsive hover borderless>\n          <thead className=\"table-active\">\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Phone</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {customerList.map((obj, index) => {\n              return (\n                <tr key={index.toString()}>\n                  <td>{index + 1}</td>\n                  <td>{obj.customer_name}</td>\n                  <td>{obj.customer_address}</td>\n                  <td>{obj.customer_phone}</td>\n                  <td className=\"text-center\">\n                    <ButtonGroup size=\"sm\">\n                      <Button\n                        title=\"Add to cart\"\n                        color=\"success\"\n                        onClick={() => {\n                          this.setCustomerToCart(index);\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faPlus} /> Add To Cart\n                      </Button>\n                      <Button\n                        title=\"Edit Customer\"\n                        color=\"warning\"\n                        onClick={() => {\n                          this.getCustomer(index);\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faEdit} /> Edit\n                      </Button>\n                      <Button\n                        title=\"Delete Customer\"\n                        onClick={() => {\n                          this.deleteCustomer(obj.customer_id);\n                        }}\n                        color=\"danger\"\n                      >\n                        <FontAwesomeIcon icon={faTrash} /> Delete\n                      </Button>\n                    </ButtonGroup>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        <Modal\n          isOpen={this.state.modalDialog}\n          size=\"lg\"\n          toggle={this.toggleModal}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            {this.state.is_new ? \"New Customer\" : \"Edit Customer\"}\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup row>\n                <Label sm={3}>Customer Name</Label>\n                <Col sm={8}>\n                  <Input\n                    invalid={\n                      this.state.customer_validation.customer_name_invalid\n                    }\n                    autoFocus\n                    innerRef={(ref) => {\n                      this.customerRef = ref;\n                    }}\n                    size=\"sm\"\n                    type=\"text\"\n                    name=\"customer_name\"\n                    value={this.state.customer.customer_name}\n                    placeholder=\"customer name\"\n                    onChange={(event) => {\n                      const { target } = event;\n                      this.setState({\n                        customer: {\n                          ...this.state.customer,\n                          customer_name: target.value,\n                        },\n                      });\n                    }}\n                  />\n                  <FormFeedback tooltip>customer name is required</FormFeedback>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label sm={3}>Customer Address</Label>\n                <Col sm={9}>\n                  <Input\n                    invalid={\n                      this.state.customer_validation.customer_address_invalid\n                    }\n                    size=\"sm\"\n                    type=\"textarea\"\n                    value={this.state.customer.customer_address}\n                    placeholder=\"Customer address\"\n                    onChange={(event) => {\n                      const { target } = event;\n                      this.setState({\n                        customer: {\n                          ...this.state.customer,\n                          customer_address: target.value,\n                        },\n                      });\n                    }}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label sm={3}>Customer Phone</Label>\n                <Col sm={4}>\n                  <Input\n                    invalid={\n                      this.state.customer_validation.customer_phone_invalid\n                    }\n                    size=\"sm\"\n                    type=\"text\"\n                    value={this.state.customer.customer_phone}\n                    placeholder=\"Customer phone\"\n                    onChange={(event) => {\n                      const { target } = event;\n                      this.setState({\n                        customer: {\n                          ...this.state.customer,\n                          customer_phone: target.value,\n                        },\n                      });\n                    }}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggleModal}>\n              Cancel\n            </Button>{\" \"}\n            <Button color=\"primary\" onClick={this.saveCustomer}>\n              {this.state.is_new ? \"Save New\" : \"Edit Customer\"}\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </CustomModal>\n    );\n  }\n}\n\nexport default Customer;\n","import { noAuthAPI } from \"./AxiosDefault\";\n\nconst itemAdd = (obj) => {\n  return noAuthAPI.post(\"/item\", obj);\n};\nconst itemEdit = (obj) => {\n  return noAuthAPI.post(\"/item/edit\", obj);\n};\nconst itemDelete = (obj) => {\n  return noAuthAPI.delete(\"/item/delete\", obj);\n};\nconst itemGet = (obj) => {\n  return noAuthAPI.get(\"/item\", { params: obj });\n};\nconst itemList = (obj) => {\n  return noAuthAPI.get(\"/item\", { params: obj });\n};\nconst itemSearch = (obj) => {\n  return noAuthAPI.get(\"/item/search\", { params: obj });\n};\n\nconst ItemAPI = {\n  itemAdd,\n  itemEdit,\n  itemDelete,\n  itemGet,\n  itemList,\n  itemSearch,\n};\n\nexport default ItemAPI;\n","import React from \"react\";\nimport \"./index.css\";\nimport CustomModal from \"../../components/CustomModal\";\nimport {\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  FormFeedback,\n} from \"reactstrap\";\nimport NumberFormat from \"react-number-format\";\nimport ItemAPI from \"../../services/request/Item\";\nimport { toast } from \"react-toastify\";\nimport ToastError from \"../../services/request/ErrorReq\";\n\nconst item_validation_default = {\n  item_name_invalid: false,\n  item_package_invalid: false,\n};\n\nconst item_default = {\n  item_id: 0,\n  item_name: \"\",\n  item_price: 0,\n  item_stock: 0,\n  item_package: \"\",\n};\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: props.new ? item_default : props.itemDetail,\n      item_validation: item_validation_default,\n      is_new: props.new,\n      in_proses: false,\n    };\n  }\n  componentDidUpdate() {}\n  componentDidMount() {}\n  saveItem = () => {\n    let req = this.state.item;\n    if (req.item_name === \"\") {\n      this.setState({\n        item_validation: {\n          ...this.state.item_validation,\n          item_name_invalid: true,\n        },\n      });\n      this.itemRef.focus();\n      return;\n    }\n    if (req.item_package === \"\") {\n      this.setState({\n        item_validation: {\n          ...this.state.item_validation,\n          item_package_invalid: true,\n        },\n      });\n      this.packageRef.focus();\n      return;\n    }\n    this.state.is_new ? this.saveNewItem() : this.editItem();\n  };\n  saveNewItem() {\n    ItemAPI.itemAdd(this.state.item)\n      .then((result) => {\n        toast.success(result.data.message);\n        this.setState({ item: item_default });\n        this.itemRef.focus();\n        this.props.refreshItem();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  editItem() {\n    ItemAPI.itemEdit(this.state.item)\n      .then((result) => {\n        toast.success(result.data.message);\n        this.itemRef.focus();\n        this.props.refreshItem();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  render() {\n    return (\n      <CustomModal title={this.state.is_new ? \"New Item\" : \"Edit Item\"}>\n        <Form>\n          <FormGroup row>\n            <Label sm={2}>Item Name</Label>\n            <Col sm={6}>\n              <Input\n                invalid={this.state.item_validation.item_name_invalid}\n                autoFocus\n                innerRef={(ref) => {\n                  this.itemRef = ref;\n                }}\n                size=\"sm\"\n                type=\"text\"\n                name=\"item_name\"\n                value={this.state.item.item_name}\n                placeholder=\"Item name\"\n                onChange={(event) => {\n                  const { target } = event;\n                  this.setState({\n                    item: {\n                      ...this.state.item,\n                      item_name: target.value,\n                    },\n                  });\n                }}\n              />\n              <FormFeedback tooltip>Item name is required</FormFeedback>\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label sm={2}>Price</Label>\n            <Col sm={6}>\n              <NumberFormat\n                className=\"form-control-sm form-control\"\n                placeholder=\"0\"\n                type=\"text\"\n                name=\"item_price\"\n                value={this.state.item.item_price}\n                thousandSeparator={true}\n                inputMode=\"numeric\"\n                onValueChange={(values) => {\n                  const { value } = values;\n                  this.setState({\n                    item: {\n                      ...this.state.item,\n                      item_price: value,\n                    },\n                  });\n                }}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label sm={2}>Stock</Label>\n            <Col sm={6}>\n              <NumberFormat\n                className=\"form-control-sm form-control\"\n                placeholder=\"0\"\n                type=\"text\"\n                name=\"item_stock\"\n                value={this.state.item.item_stock}\n                thousandSeparator={true}\n                inputmode=\"numeric\"\n                onValueChange={(values) => {\n                  const { value } = values;\n                  this.setState({\n                    item: {\n                      ...this.state.item,\n                      item_stock: value,\n                    },\n                  });\n                }}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label sm={2}>Package</Label>\n            <Col sm={6}>\n              <Input\n                invalid={this.state.item_validation.item_package_invalid}\n                type=\"select\"\n                innerRef={(ref) => {\n                  this.packageRef = ref;\n                }}\n                defaultValue={this.state.item.item_package}\n                onChange={(event) => {\n                  const { target } = event;\n                  this.setState({\n                    item: {\n                      ...this.state.item,\n                      item_package: target.value,\n                    },\n                  });\n                }}\n                name=\"item_package\"\n                size=\"sm\"\n              >\n                <option value=\"\" disabled selected>\n                  Select package name\n                </option>\n                <option value=\"PCS\">PCS</option>\n                <option value=\"BOX\">BOX</option>\n              </Input>\n              <FormFeedback tooltip>Package name is required</FormFeedback>\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label sm={2}></Label>\n            <Col sm={6}>\n              <Button color=\"primary\" onClick={this.saveItem} title=\"Save Item\">\n                {this.props.new ? \"Save Item\" : \"Edit Item\"}\n              </Button>\n            </Col>\n          </FormGroup>\n        </Form>\n      </CustomModal>\n    );\n  }\n}\n\nexport default Item;\n","import { noAuthAPI } from \"./AxiosDefault\";\n\nconst salesAdd = (obj) => {\n  return noAuthAPI.post(\"/sales\", obj);\n};\nconst salesDelete = (obj) => {\n  return noAuthAPI.delete(\"/sales\", obj);\n};\nconst salesGet = (obj) => {\n  return noAuthAPI.get(\"/sales/id\", { params: obj });\n};\nconst salesList = (obj) => {\n  return noAuthAPI.get(\"/sales\", { params: obj });\n};\n\nconst SalesAPI = {\n  salesAdd,\n  salesDelete,\n  salesGet,\n  salesList,\n};\n\nexport default SalesAPI;\n","import React from \"react\";\nimport \"./index.css\";\nimport CustomModal from \"../../components/CustomModal\";\nimport { Table, ButtonGroup, Button } from \"reactstrap\";\nimport SalesAPI from \"../../services/request/Sales\";\nimport ToastError from \"../../services/request/ErrorReq\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberFormat from \"react-number-format\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n\n  deleteSales = (id) => {\n    SalesAPI.salesDelete({ sales_id: id })\n      .then((result) => {\n        toast.success(result.data.message);\n        this.refreshSales();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  };\n\n  componentDidMount() {\n    this.refreshSales();\n  }\n\n  refreshSales() {\n    SalesAPI.salesList()\n      .then((result) => {\n        console.log(result);\n        this.setState({\n          list: result.data,\n        });\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  render() {\n    const SalesList = this.state.list;\n    return (\n      <CustomModal title=\"Sales\">\n        <Table responsive hover borderless>\n          <thead className=\"table-active\">\n            <tr>\n              <th>#</th>\n              <th>Sales Date</th>\n              <th>Customer</th>\n              <th>Discount</th>\n              <th>Total</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {SalesList.map((obj, index) => {\n              return (\n                <tr key={index.toString()}>\n                  <td>{index + 1}</td>\n                  <td>{obj.sales_date}</td>\n                  <td>{obj.customer_name}</td>\n                  <td>\n                    <NumberFormat\n                      value={obj.discount}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </td>\n                  <td>\n                    <NumberFormat\n                      value={parseFloat(obj.total)}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </td>\n                  <td className=\"text-center\">\n                    <ButtonGroup size=\"sm\">\n                      <Button\n                        title=\"Delete Sales\"\n                        onClick={() => {\n                          this.deleteSales(obj.sales_id);\n                        }}\n                        color=\"danger\"\n                      >\n                        <FontAwesomeIcon icon={faTrash} /> Delete\n                      </Button>\n                    </ButtonGroup>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </CustomModal>\n    );\n  }\n}\n\nexport default List;\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  Table,\n  Button,\n  ButtonGroup,\n  ListGroup,\n  ListGroupItem,\n} from \"reactstrap\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Customer from \"../customer\";\nimport Item from \"../item\";\nimport List from \"../list\";\n\nimport ItemAPI from \"../../services/request/Item\";\nimport SalesAPI from \"../../services/request/Sales\";\n\nimport ToastError from \"../../services/request/ErrorReq\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCartPlus,\n  faEdit,\n  faSync,\n  faTimes,\n  faTrash,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst CustomCalender = ({ value, onClick }) => (\n  <Button color=\"success\" onClick={onClick}>\n    {value}\n  </Button>\n);\n\nconst format_mysql_date = (d) => {\n  let month = \"\" + (d.getMonth() + 1);\n  let day = \"\" + d.getDate();\n  let year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n};\n\nclass POS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      new_item: true,\n      sales: {\n        customer_id: 0,\n        customer_name: \"\",\n        sales_date_display: new Date(),\n        sales_date: format_mysql_date(new Date()),\n        discount: 0,\n        list_cart: [],\n        sub_total: 0,\n        grand_total: 0,\n      },\n      list_item: [],\n      editItem: {},\n      search_item_keyword: \"\",\n      refresh_animation: false,\n    };\n  }\n\n  cancelTransaction = () => {\n    let y = window.confirm(\"Cancel Transaction ?\");\n    y && this.resetObject();\n  };\n\n  refreshItem() {\n    this.setState({ refresh_animation: true });\n    ItemAPI.itemList()\n      .then((result) => {\n        this.setState({\n          list_item: result.data,\n          refresh_animation: false,\n        });\n      })\n      .catch((err) => {\n        ToastError(err);\n        this.setState({ refresh_animation: false });\n      });\n  }\n\n  newCustomer = () => {\n    this.props.history.push(\"/customer\");\n  };\n\n  listSales = () => {\n    this.props.history.push(\"/list\");\n  };\n\n  newItem = () => {\n    this.setState({ new_item: true, editItem: {} });\n    this.props.history.push(\"/item\");\n  };\n\n  editItem = (index) => {\n    this.setState({ new_item: false, editItem: this.state.list_item[index] });\n    this.props.history.push(\"/item\");\n  };\n\n  deleteItem = (index) => {\n    let detail = this.state.list_item[index];\n    let del = window.confirm(\"Delete item : \" + detail.item_name + \" ?\");\n    if (del) {\n      ItemAPI.itemDelete({ item_id: detail.item_id })\n        .then((result) => {\n          toast.success(result.data.message);\n          this.refreshItem();\n        })\n        .catch((err) => {\n          ToastError(err);\n        });\n    }\n  };\n\n  addCart = (index) => {\n    let listCart = this.state.sales.list_cart;\n    let newItem = this.state.list_item[index];\n    index = listCart.findIndex((x) => x.item_id === newItem.item_id);\n    if (index < 0) {\n      listCart.push({\n        item_name: newItem.item_name,\n        item_qty: 1,\n        item_price: parseFloat(newItem.item_price),\n        item_id: newItem.item_id,\n        item_subtotal: parseFloat(newItem.item_price),\n      });\n    } else {\n      listCart[index].item_qty += 1;\n      listCart[index].item_subtotal =\n        parseFloat(newItem.item_price) * parseFloat(listCart[index].item_qty);\n    }\n    this.setState({ sales: { ...this.state.sales, list_cart: listCart } });\n  };\n  handleDecQty = (index) => {\n    let listCart = this.state.sales.list_cart;\n    if (listCart[index].item_qty === 1) {\n      return;\n    }\n    listCart[index].item_qty -= 1;\n    listCart[index].item_subtotal =\n      parseFloat(listCart[index].item_price) *\n      parseFloat(listCart[index].item_qty);\n    this.setState({ sales: { ...this.state.sales, list_cart: listCart } });\n  };\n  handleIncQty = (index) => {\n    let listCart = this.state.sales.list_cart;\n    listCart[index].item_qty += 1;\n    listCart[index].item_subtotal =\n      parseFloat(listCart[index].item_price) *\n      parseFloat(listCart[index].item_qty);\n    this.setState({ sales: { ...this.state.sales, list_cart: listCart } });\n  };\n  deleteCart = (index) => {\n    let listCart = this.state.sales.list_cart;\n    listCart.splice(index, 1);\n    this.setState({ sales: { ...this.state.sales, list_cart: listCart } });\n  };\n  resetObject() {\n    this.setState({\n      sales: {\n        customer_id: 0,\n        customer_name: \"\",\n        sales_date_display: new Date(),\n        sales_date: format_mysql_date(new Date()),\n        discount: 0,\n        list_cart: [],\n        sub_total: 0,\n        grand_total: 0,\n      },\n    });\n  }\n  payTransaction = (obj) => {\n    let sales = this.state.sales;\n    if (sales.customer_id === 0) {\n      toast.error(\"Please choose customer before save\");\n      this.newCustomer();\n      return;\n    }\n    if (sales.list_cart.length <= 0) {\n      toast.error(\"Cart doesn't have any product\");\n      return;\n    }\n    let y = window.confirm(\"Save payment transaction ?\");\n    if (y) {\n      SalesAPI.salesAdd(this.state.sales)\n        .then((result) => {\n          this.resetObject();\n          toast.success(result.data.message);\n        })\n        .catch((err) => {\n          ToastError(err);\n        });\n    }\n  };\n  setCustomer = (id, custname) => {\n    this.setState({\n      sales: {\n        ...this.state.sales,\n        customer_id: id,\n        customer_name: custname,\n      },\n    });\n    this.props.history.goBack();\n  };\n\n  componentDidUpdate() {}\n  componentDidMount() {\n    this.refreshItem();\n  }\n\n  render() {\n    const itemlist = this.state.list_item;\n    const searchword = this.state.search_item_keyword;\n    const listCart = this.state.sales.list_cart;\n    let disc = parseFloat(this.state.sales.discount);\n    let subs = 0;\n    this.state.sales.list_cart.forEach((obj) => {\n      subs += parseFloat(obj.item_subtotal);\n    });\n    let grand_total = subs - (subs * disc) / 100;\n    let sub_total = subs;\n\n    return (\n      <>\n        <Row className=\"main-pos\">\n          <Col sm={4}>\n            <Col className=\"main-pos-left\" sm={12}>\n              <div className=\"container-header\">\n                <div className=\"container-header-1\">\n                  <InputGroup>\n                    <DatePicker\n                      dateFormat=\"dd/MM/yyyy\"\n                      selected={this.state.sales.sales_date_display}\n                      onChange={(date) =>\n                        this.setState({\n                          sales: {\n                            ...this.state.sales,\n                            sales_date_display: date,\n                            sales_date: format_mysql_date(date),\n                          },\n                        })\n                      }\n                      customInput={<CustomCalender />}\n                    />\n\n                    <InputGroupAddon addonType=\"append\">\n                      <InputGroupText>\n                        <FontAwesomeIcon icon={faUser} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </div>\n                <div className=\"container-header-2\">\n                  <Button color=\"info\" onClick={this.newCustomer} block>\n                    {this.state.sales.customer_id === 0\n                      ? \"+ Add Customer\"\n                      : this.state.sales.customer_name}\n                  </Button>\n                </div>\n              </div>\n              <div className=\"container-cart\">\n                <div className=\"container-cart-list\">\n                  <ListGroup flush>\n                    {listCart.map((obj, index) => {\n                      return (\n                        <ListGroupItem key={index.toString()}>\n                          <div className=\"cart-name\">\n                            <div>{obj.item_name}</div>\n                          </div>\n                          <div className=\"cart-detail\">\n                            <div className=\"cart-1\">\n                              <Button\n                                onClick={() => {\n                                  this.handleDecQty(index);\n                                }}\n                                size=\"sm\"\n                              >\n                                -\n                              </Button>\n                              {\"  \"}\n                              {obj.item_qty}\n                              {\"  \"}\n                              <Button\n                                onClick={() => {\n                                  this.handleIncQty(index);\n                                }}\n                                size=\"sm\"\n                              >\n                                +\n                              </Button>{\" \"}\n                              x{\" \"}\n                              <NumberFormat\n                                value={obj.item_price}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </div>\n\n                            <div className=\"cart-2\">\n                              <NumberFormat\n                                value={obj.item_subtotal}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </div>\n                            <div className=\"cart-3\">\n                              <FontAwesomeIcon\n                                className=\"text-danger pointer-hand\"\n                                title=\"Delete item from cart\"\n                                icon={faTimes}\n                                onClick={() => {\n                                  this.deleteCart(index);\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </ListGroupItem>\n                      );\n                    })}\n                  </ListGroup>\n                </div>\n                <div className=\"container-cart-recap\">\n                  <div className=\"recap\">\n                    <div className=\"title\">Total</div>\n                    <div className=\"result\">\n                      <NumberFormat\n                        value={sub_total}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"recap\">\n                    <div className=\"title\">Discount</div>\n                    <div className=\"result\">\n                      <InputGroup size=\"sm\">\n                        <Input\n                          type=\"number\"\n                          min=\"0\"\n                          max=\"100\"\n                          size=\"sm\"\n                          onChange={(event) => {\n                            const { target } = event;\n                            this.setState({\n                              sales: {\n                                ...this.state.sales,\n                                discount: target.value,\n                              },\n                            });\n                          }}\n                          value={this.state.sales.discount}\n                          placeholder=\"0\"\n                        />\n                        <InputGroupAddon addonType=\"append\">\n                          <InputGroupText>%</InputGroupText>\n                        </InputGroupAddon>\n                      </InputGroup>\n                    </div>\n                  </div>\n                  <div className=\"recap\">\n                    <div className=\"title\">Net</div>\n                    <div className=\"result recap-net\">\n                      <NumberFormat\n                        value={grand_total}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Col>\n          <Col sm={8}>\n            <Col className=\"main-pos-right\" sm={12}>\n              <div className=\"mb-3\">\n                <InputGroup size=\"sm\">\n                  <Input\n                    onChange={(event) => {\n                      const { target } = event;\n                      this.setState({ search_item_keyword: target.value });\n                    }}\n                    placeholder=\"SEARCH PRODUCT HERE...\"\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    <ButtonGroup title=\"Refresh item list\" size=\"sm\">\n                      <Button\n                        color=\"warning\"\n                        onClick={() => {\n                          this.refreshItem();\n                        }}\n                      >\n                        <FontAwesomeIcon\n                          spin={this.state.refresh_animation}\n                          icon={faSync}\n                        />\n                      </Button>\n                      <Button color=\"primary\" onClick={this.newItem}>\n                        {\" \"}\n                        + ADD NEW ITEM\n                      </Button>\n                    </ButtonGroup>\n                  </InputGroupAddon>\n                </InputGroup>\n              </div>\n              <div>\n                <Table responsive hover borderless>\n                  <thead className=\"table-active\">\n                    <tr>\n                      <th>#</th>\n                      <th>Item</th>\n                      <th className=\"text-right\">Stock</th>\n                      <th className=\"text-right\">Price</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {itemlist\n                      .filter((itm) =>\n                        itm.item_name\n                          .toUpperCase()\n                          .includes(searchword.toUpperCase())\n                      )\n                      .map((obj, index) => {\n                        return (\n                          <tr key={index.toString()}>\n                            <td>{index + 1}</td>\n                            <td>{obj.item_name}</td>\n                            <td className=\"text-right\">{obj.item_stock}</td>\n                            <td className=\"text-right\">{obj.item_price}</td>\n                            <td className=\"text-center\">\n                              <ButtonGroup size=\"sm\">\n                                <Button\n                                  onClick={() => {\n                                    this.addCart(index);\n                                  }}\n                                  title=\"Add to cart\"\n                                  color=\"success\"\n                                >\n                                  <FontAwesomeIcon icon={faCartPlus} /> Add\n                                </Button>\n                                <Button\n                                  title=\"Edit master item\"\n                                  color=\"warning\"\n                                  onClick={() => {\n                                    this.editItem(index);\n                                  }}\n                                >\n                                  <FontAwesomeIcon icon={faEdit} /> Edit\n                                </Button>\n                                <Button\n                                  title=\"Delete item\"\n                                  onClick={() => {\n                                    this.deleteItem(index);\n                                  }}\n                                  color=\"danger\"\n                                >\n                                  <FontAwesomeIcon icon={faTrash} /> Delete\n                                </Button>\n                              </ButtonGroup>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                  </tbody>\n                </Table>\n              </div>\n              <div>\n                <Button\n                  onClick={this.payTransaction}\n                  color=\"success\"\n                  className=\"mr-1\"\n                >\n                  PAYMENT\n                </Button>\n                <Button\n                  onClick={this.cancelTransaction}\n                  color=\"danger\"\n                  className=\"mr-1\"\n                >\n                  CANCEL\n                </Button>\n                <Button onClick={this.listSales} color=\"info\">\n                  SALES'S LIST\n                </Button>\n              </div>\n            </Col>\n          </Col>\n        </Row>\n\n        <Switch>\n          <Route exact path=\"/\" />\n          <Route\n            path=\"/customer\"\n            render={() => (\n              <Customer\n                new={this.state.new_customer}\n                callbackRequest={(id, custname) => {\n                  this.setCustomer(id, custname);\n                }}\n                customerDetail={this.state.editCustomer}\n              />\n            )}\n          />\n          <Route path=\"/list\">\n            <List />\n          </Route>\n          <Route\n            path=\"/item\"\n            render={() => (\n              <Item\n                new={this.state.new_item}\n                refreshItem={() => {\n                  this.refreshItem();\n                }}\n                itemDetail={this.state.editItem}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default withRouter(POS);\n","import React from \"react\";\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt, faBell } from \"@fortawesome/free-solid-svg-icons\";\nimport profile from \"./assets/image/profile.png\";\nimport \"./App.css\";\nimport POS from \"./pages/pos/\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Container fluid={true}>\n            <Row>\n              <Col sm=\"2\" className=\"text-center header-col-brand\">\n                POS REACT\n              </Col>\n              <Col sm=\"10\" className=\"header-col-nav\">\n                <Nav className=\" ml-auto\">\n                  <NavItem>\n                    <div className=\"profile\">\n                      <div className=\"name\">Sigit Prasetya</div>\n                      <div className=\"image\">\n                        <img\n                          alt=\"profile-photos\"\n                          className=\"rounded-circle\"\n                          src={profile}\n                          height=\"40px\"\n                        />\n                      </div>\n                    </div>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink className=\"navlink-padding\" href=\"#\">\n                      <FontAwesomeIcon icon={faBell} size=\"lg\" />\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink className=\"navlink-padding\" href=\"#\">\n                      <FontAwesomeIcon icon={faSignOutAlt} size=\"lg\" />\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </header>\n        <main className=\"main-app\">\n          <Container className=\"container-main\" fluid>\n            <POS />\n          </Container>\n        </main>\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={true}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./bootswatch/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}